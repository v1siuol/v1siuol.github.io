<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Flask Traditional Deployments: Zero to One &amp;lt;Setup a VPS&amp;gt;</title>
    <url>/Flask-Traditional-Deployments-Zero-to-One-Setup-a-VPS/</url>
    <content><![CDATA[<img src="/Flask-Traditional-Deployments-Zero-to-One-Setup-a-VPS/Flask_Traditional_Deployments_Zero_to_One_Setup_a_VPS_avatar.png">
<blockquote>
<p>The following article will introduce how to set up a <strong>virtual private server</strong>, and some basic <strong>Linux</strong> commands.</p>
</blockquote>
<span id="more"></span>
<h2 id="Background">Background</h2>
<ul>
<li>A quite developed web project ( For Flask case, <code>flask run</code> listens <em>127.0.0.1:5000</em> by default, or <code>flask run --host 0.0.0.0</code> to listen all public IPs, like <em>a.b.c.d:5000</em>. Have fun with this first, then come and play with VPS! )</li>
<li>This series is a supplement for <em>Tradition Deployments</em> in <em>Chapter 17. Deployment</em> in <em><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L2ZsYXNrLXdlYi1kZXZlbG9wbWVudC85NzgxNDkxOTkxNzI1Lw==">Flask Web Development, 2nd Edition<i class="fa fa-external-link-alt"></i></span></em> written by <em>Miguel Grinberg</em>.</li>
<li><code>$ something</code> refers to commands in bash</li>
</ul>
<h2 id="0-How-to-Select-a-Virtual-Private-Server">0. How to Select a Virtual Private Server</h2>
<table>
<thead>
<tr>
<th>地区</th>
<th>服务</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>国内</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS8=">腾讯云<i class="fa fa-external-link-alt"></i></span></td>
<td>需备案</td>
</tr>
<tr>
<td>海外</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS8=">AWS<i class="fa fa-external-link-alt"></i></span></td>
<td>国内的 AWS 由北京的光环新网运营</td>
</tr>
</tbody>
</table>
<p>以上是些主流的云服务器啦，贵贵的。</p>
<p>I select AWS here since AWS provides a free tier for <strong>one</strong> year. For details, refer to <span class="exturl" data-url="aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS9mcmVlLw==">https://aws.amazon.com/free/<i class="fa fa-external-link-alt"></i></span>.</p>
<p>AWS Free Tier includes 750 hours of <span class="exturl" data-url="aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS9lYzIv">Amazon Elastic Compute Cloud (EC2)<i class="fa fa-external-link-alt"></i></span> <strong>Linux</strong> t2.micro instance usage (1 GiB of memory and 32-bit and 64-bit platform support). Saying we can run 1 instance continuously for one month, or 2 instances at the same time continuously for half a month.</p>
<p>It also includes 30 GB of <a href="https://aws.amazon.com/ebs/">Amazon Elastic Block <strong>Storage</strong> (EBS)</a> in any combination of General Purpose (SSD) or Magnetic, plus 2 million I/Os (with EBS Magnetic) and 1 GB of snapshot storage.</p>
<h2 id="1-How-to-Create-the-Amazon-EC2">1. How to Create the Amazon EC2</h2>
<p>Official documents: <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0VDMi9sYXRlc3QvVXNlckd1aWRlL2dldC1zZXQtdXAtZm9yLWFtYXpvbi1lYzIuaHRtbA==">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Basic steps:</p>
<ol>
<li>Sign Up for AWS</li>
<li>Create an IAM User</li>
<li>Create a Key Pair</li>
<li>Create a Virtual Private Cloud (VPC)</li>
<li>Create a Security Group</li>
</ol>
<p>My VPC is like this:</p>
<ol>
<li>
<p>AMI: Ubuntu Server 16.04 LTS (HVM), SSD Volume Type - ami-5e8bb23b</p>
<p>Ubuntu Server 16.04 LTS (HVM), EBS General Purpose (SSD) Volume Type.</p>
</li>
<li>
<p>Instance type: t2.micro (Variable ECUs, 1 vCPUs, 2.5 GHz, Intel Xeon Family, 1 GiB memory, EBS only)</p>
</li>
</ol>
<h2 id="2-How-to-Connect-to-my-VPC">2. How to Connect to my VPC</h2>
<p>Official documents: <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0VDMi9sYXRlc3QvVXNlckd1aWRlL0FjY2Vzc2luZ0luc3RhbmNlc0xpbnV4Lmh0bWw=">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Two commands using in my Mac terminal:</p>
<ol>
<li>
<p><code>$ chmod 400 /path/my-key-pair.pem</code></p>
<p>This is used to set the permissions of your private key file as read-only.</p>
<p>The link to learn more on <code>chmod</code> : <span class="exturl" data-url="aHR0cHM6Ly9jaG1vZGNvbW1hbmQuY29tL2NobW9kLTQwMC8=">https://chmodcommand.com/chmod-400/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li>
<p><code>$ ssh -i /path/my-key-pair.pem user_name@public_dns_name</code></p>
<p>Default <code>user_name</code> is like:</p>
<ul>
<li>For Amazon Linux 2 or the Amazon Linux AMI, the user name is <code>ec2-user</code>.</li>
<li>For a Centos AMI, the user name is <code>centos</code>.</li>
<li>For a Debian AMI, the user name is <code>admin</code> or <code>root</code>.</li>
<li>For a Fedora AMI, the user name is <code>ec2-user</code> or <code>fedora</code>.</li>
<li>For a RHEL AMI, the user name is <code>ec2-user</code> or <code>root</code>.</li>
<li>For a SUSE AMI, the user name is <code>ec2-user</code> or <code>root</code>.</li>
<li>For an Ubuntu AMI, the user name is <code>ubuntu</code>.</li>
<li>Otherwise, if <code>ec2-user</code> and <code>root</code> don’t work, check with the AMI provider.</li>
</ul>
<p><code>public_dns_name</code> is like:<code>ec2-198-51-100-1.compute-1.amazonaws.com</code></p>
</li>
<li>
<p>The updated version of my second command: <code>$ ssh -o TCPKeepAlive=yes -o ServerAliveInterval=60 -i /path/my-key-pair.pem user_name@public_dns_name</code></p>
<p>In my practice, I usually encounter if I do nothing in the terminal for like 5 minutes.</p>
<blockquote>
<p>packet_write_wait: Connection to &lt;ip&gt; port 22: Broken pipe</p>
</blockquote>
<p>So I update the connection by sending the “HeartBeat” to the server to hold my connection.</p>
</li>
</ol>
<h2 id="3-How-to-Close-my-VPC-Connection">3. How to Close my VPC Connection</h2>
<p><code>$ logout</code> : then you will see <code>Connection to &lt;public_dns_name&gt; closed. </code> .</p>
<h2 id="4-Optional-How-to-transfer-files-between-my-PC-and-EC2">4. (Optional) How to transfer files between my PC and EC2</h2>
<ol>
<li>
<p>Send files from PC to EC2: PC --&gt; EC2</p>
<p><code>$ scp -i /path/my-key-pair.pem /path/SampleFile.txt user_name@public_dns_name:/path</code></p>
<p><code>/path</code> : my suggestion is to use <code>~</code> or <code>/tmp</code> . If sending to other paths in your EC2, it might say <code>permission denied</code> .</p>
<p>So after scp the file to <code>/tmp</code> , <code>ssh</code> to your server and use command <code>mv /tmp/SamepleFile.txt /path/you_want</code> .</p>
</li>
<li>
<p>Send files from EC2 to PC: EC2 --&gt; PC</p>
<p><code>$ scp -i /path/my-key-pair.pem user_name@public_dns_name:/path_in_EC2/SampleFile.txt ~/path_on_PC</code></p>
</li>
</ol>
<p>Thank you.</p>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Flask</tag>
      </tags>
  </entry>
  <entry>
    <title>《摆 烂》</title>
    <url>/%E3%80%8A%E6%91%86-%E7%83%82%E3%80%8B/</url>
    <content><![CDATA[<p>「正经人谁写<s>日记</s>博客啊」</p>
<img src="/《摆-烂》/wind_knight-i7bt5FNYcNI-unsplash.jpg" width="50%" height="50%">
<p>早在四五年前，我便创了一个微信公众号。可惜，直到目前，还只是用来预览测试过。也起草过些许零零散散的短文，无奈羞涩，一直被我埋藏在深深的角落里。</p>
<p>也是有一段时间没写过文章了。打小的时候开始，我的语文便不太好，腹中的知识也早已一一归还，文笔不好，还请见谅。开篇即摆烂，但其实内心还是希望能好好坚持下去，多读读，多想想，多写写，会好起来的吧。</p>
<p>话说回来，如今已是盛夏，只可惜暑假已不再属于我了。闲暇之际，还是会很想念那年的夏天。无忧，无虑，很是美好。</p>
<span id="more"></span>
<img src="/《摆-烂》/league_of_legends_Moo_Cow_Alistar_giphy_min.gif" width="50%" height="50%">
<p>说一说 v1siuol 这个名字吧，这是我众多马甲中的一个。姑且称作小 v，憧憬着会有那么一天长大成 v 神。其实这名字反过来看就比较好理解了：louis1v。louis 即我的英文名，1v 则是我姓的中文拼音。</p>
<p>没有什么出众的奖项，也没有什么出彩的项目，说到底只不过是个平平无奇小废物。他们都说「未来可期」，是啊，近期的目标是在平台上找到自己感兴趣的项目，给开源社区贡献一份微小的力量吧。</p>
<img src="/《摆-烂》/zino-scheers-CAf3ld_LLz8-unsplash.jpg" width="50%" height="50%">
<p>再谈谈博客吧。转眼间这已经是我第三版的博客了。</p>
<p>第一版是 Python Flask 加 Jinja2 模板直接使用服务器渲染的，那时候是仿照动物书《Flask Web Development》中的例子做成的。当时上学时主要用 Python，正好 Python 中比较有名的网络框架有 Django，Flask 等。考虑到 Flask 的轻量以及可扩展性吧，我也刚好选择了这本书，并从中受益良多。这本书循序渐进，层层深入，又不忘工程中的可测试性，安全性。该书给予了当时的我很多思考与启发。再到后来部署时，我采用了 uWSGI 及 NGINX 的方案。到此为止，第一版博客诞生了。</p>
<p>不知是哪一天，我在网上冲浪的时候发现了一个很好看的网站，改版的种子就埋在了我的心里。那时流行 Angular，React，Vue 三大前端框架，我从中选择了 React 做前端，并延续 Flask 做后端 API。经过了一系列的更新迭代，第二版博客于 2019 年暑假正式上线。</p>
<p>可惜的是，Flask 伴随着各类 package 的加入，它从开箱即用，到一定程度上的臃肿，这套方案也渐渐的走下了历史的舞台。如今第三版，使用的 GitHub Pages + Hexo 配合 NexT 主题的方案。不出意外的话，这也是将来很长一段时间内使用的一个方案了，因为它基本达到了我对博客的各式需求。再加上魔改的存在，使得你能更加自由的注入灵魂。以后这里主要用来做技术分享以及日常摆烂的杂记啦，敬请期待。</p>
<p>今天也是中国共产党迎来百年华诞之际。愿祖国繁荣昌盛，国泰民安！</p>
<p>二零二一年七月一日，v1siuol 写于 Norwalk，CT</p>
]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>中文</tag>
      </tags>
  </entry>
</search>
