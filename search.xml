<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Flask Traditional Deployments: Zero to One &amp;lt;Explore HTTPS&amp;gt;</title>
    <url>/Flask-Traditional-Deployments-Zero-to-One-Explore-HTTPS/</url>
    <content><![CDATA[<img src="/Flask-Traditional-Deployments-Zero-to-One-Explore-HTTPS/Flask_Traditional_Deployments_Zero_to_One_Explore_HTTPS_avatar.png">
<blockquote>
<p>The following article will introduce how to config HTTPS servers.</p>
</blockquote>
<span id="more"></span>
<h2 id="Background">Background</h2>
<ul>
<li>This series is a supplyment for <em>Tradition Deploments</em> in <em>Chapter 17. Deployment</em> in <em><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L2ZsYXNrLXdlYi1kZXZlbG9wbWVudC85NzgxNDkxOTkxNzI1Lw==">Flask Web Development, 2nd Edition<i class="fa fa-external-link-alt"></i></span></em> written by <em>Miguel Grinberg</em>.</li>
</ul>
<h2 id="Steps">Steps</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install software-properties-common</span><br><span class="line">$ sudo add-apt-repository ppa:certbot/certbot</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install certbot</span><br><span class="line"></span><br><span class="line">$ sudo certbot certonly --webroot -w /var/www/example -d example.com -d www.example.com</span><br></pre></td></tr></table></figure>
<p><code>/var/www/example</code> should be the root path under <code>location ~ /.well-known</code> .</p>
<p><code>example.com</code> and <code>www.example.com</code> should be your domain name.</p>
<blockquote>
<p>Saving debug log to /var/log/letsencrypt/letsencrypt.log<br>
Plugins selected: Authenticator webroot, Installer None<br>
Starting new HTTPS connection (1): <span class="exturl" data-url="aHR0cDovL2FjbWUtdjAyLmFwaS5sZXRzZW5jcnlwdC5vcmc=">acme-v02.api.letsencrypt.org<i class="fa fa-external-link-alt"></i></span><br>
Obtaining a new certificate<br>
Performing the following challenges:<br>
http-01 challenge for <a href="http://v1siuol.com">v1siuol.com</a><br>
http-01 challenge for <span class="exturl" data-url="aHR0cDovL3d3dy52MXNpdW9sLmNvbQ==">www.v1siuol.com<i class="fa fa-external-link-alt"></i></span><br>
Using the webroot path /home/ubuntu/flask/v1siuol-site/veri for all unmatched domains.<br>
Waiting for verification…<br>
Cleaning up challenges<br>
IMPORTANT NOTES:<br>
- Congratulations! Your certificate and chain have been saved at:<br>
/etc/letsencrypt/live/v1siuol.com/fullchain.pem<br>
Your key file has been saved at:<br>
/etc/letsencrypt/live/v1siuol.com/privkey.pem<br>
Your cert will expire on 2018-11-17. To obtain a new or tweaked<br>
version of this certificate in the future, simply run certbot<br>
again. To non-interactively renew <em>all</em> of your certificates, run<br>
“certbot renew”<br>
- If you like Certbot, please consider supporting our work by:<br>
Donating to ISRG / Let’s Encrypt:   <span class="exturl" data-url="aHR0cHM6Ly9sZXRzZW5jcnlwdC5vcmcvZG9uYXRl">https://letsencrypt.org/donate<i class="fa fa-external-link-alt"></i></span><br>
Donating to EFF:                    <span class="exturl" data-url="aHR0cHM6Ly9lZmYub3JnL2RvbmF0ZS1sZQ==">https://eff.org/donate-le<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>As mentioned, the pem files are stored at <code>/etc/letsencrypt/live/v1siuol.com/fullchain.pem</code> and <code>/etc/letsencrypt/live/v1siuol.com/privkey.pem</code> .</p>
<p>Make SSL stronger</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ openssl dhparam -out /path/to/dhparam.pem 2048</span><br></pre></td></tr></table></figure>
<p>Now, modify your Nginx config to fit into HTTPS.</p>
<p>In <code>nginx_df</code> :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">upstream uwsgicluster &#123;</span><br><span class="line">  server unix:&#x2F;&#x2F;&#x2F;home&#x2F;ubuntu&#x2F;flask&#x2F;v1siuol-site&#x2F;logs&#x2F;uwsgi.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name v1siuol.com</span><br><span class="line">                www.v1siuol.com</span><br><span class="line">                ;</span><br><span class="line">    charset       utf-8;</span><br><span class="line"></span><br><span class="line">    location ~ &#x2F;.well-known &#123;</span><br><span class="line">        root &#x2F;home&#x2F;ubuntu&#x2F;flask&#x2F;v1siuol-site&#x2F;veri;</span><br><span class="line">    &#125;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        return 301 https:&#x2F;&#x2F;www.v1siuol.com$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen  443 ssl;</span><br><span class="line">    server_name v1siuol.com</span><br><span class="line">                www.v1siuol.com</span><br><span class="line">                ;</span><br><span class="line"></span><br><span class="line">    charset       utf-8;</span><br><span class="line"></span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;v1siuol.com&#x2F;fullchain.pem;</span><br><span class="line">    ssl_certificate_key &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;v1siuol.com&#x2F;privkey.pem;</span><br><span class="line">    ssl_dhparam &#x2F;home&#x2F;ubuntu&#x2F;flask&#x2F;v1siuol-site&#x2F;veri&#x2F;dhparam.pem;</span><br><span class="line"></span><br><span class="line">    # 减少点击劫持 Secure Nginx from Clickjacking  </span><br><span class="line">    add_header X-Frame-Options DENY;</span><br><span class="line">    # 禁止服务器自动解析资源类型 </span><br><span class="line">    # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,</span><br><span class="line">    # to disable content-type sniffing on some browsers.</span><br><span class="line">    # https:&#x2F;&#x2F;www.owasp.org&#x2F;index.php&#x2F;List_of_useful_HTTP_headers</span><br><span class="line">    # currently suppoorted in IE &gt; 8 http:&#x2F;&#x2F;blogs.msdn.com&#x2F;b&#x2F;ie&#x2F;archive&#x2F;2008&#x2F;09&#x2F;02&#x2F;ie8-security-part-vi-beta-2-update.aspx</span><br><span class="line">    # http:&#x2F;&#x2F;msdn.microsoft.com&#x2F;en-us&#x2F;library&#x2F;ie&#x2F;gg622941(v&#x3D;vs.85).aspx</span><br><span class="line">    # &#39;soon&#39; on Firefox https:&#x2F;&#x2F;bugzilla.mozilla.org&#x2F;show_bug.cgi?id&#x3D;471020</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line"></span><br><span class="line">    # 防XSS攻击</span><br><span class="line">    # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.</span><br><span class="line">    # It&#39;s usually enabled by default anyway, so the role of this header is to re-enable the filter for </span><br><span class="line">    # this particular website if it was disabled by the user.</span><br><span class="line">    # https:&#x2F;&#x2F;www.owasp.org&#x2F;index.php&#x2F;List_of_useful_HTTP_headers</span><br><span class="line">    add_header X-Xss-Protection 1;</span><br><span class="line"></span><br><span class="line">    ssl_ciphers &#39;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA&#39;;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_stapling on;</span><br><span class="line">    ssl_stapling_verify on;</span><br><span class="line"></span><br><span class="line">    ssl_session_timeout 1d;</span><br><span class="line">    ssl_session_cache shared:SSL:50m;</span><br><span class="line">    add_header Strict-Transport-Security max-age&#x3D;15768000;</span><br><span class="line">    keepalive_timeout    70;</span><br><span class="line"></span><br><span class="line">    root  &#x2F;home&#x2F;ubuntu&#x2F;react&#x2F;v1siuol-site-front-end&#x2F;build;</span><br><span class="line">    index index.html;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        try_files $uri &#x2F;index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location &#x2F;files &#123;</span><br><span class="line">        alias &#x2F;home&#x2F;ubuntu&#x2F;flask&#x2F;v1siuol-site&#x2F;app&#x2F;files;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location &#x2F;api &#123;</span><br><span class="line">        include      uwsgi_params;</span><br><span class="line">        uwsgi_pass   uwsgicluster;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Thank you.</p>
<p>Reference:</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly91d3NnaS1kb2NzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9OZ2lueC5odG1s">https://uwsgi-docs.readthedocs.io/en/latest/Nginx.html<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jZXJ0Ym90LmVmZi5vcmcv">https://certbot.eff.org/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Flask</tag>
      </tags>
  </entry>
  <entry>
    <title>Flask Traditional Deployments: Zero to One &amp;lt;Flask Server&amp;gt;</title>
    <url>/Flask-Traditional-Deployments-Zero-to-One-Flask-Server/</url>
    <content><![CDATA[<img src="/Flask-Traditional-Deployments-Zero-to-One-Flask-Server/Flask_Traditional_Deployments_Zero_to_One_Flask_Server_avatar.png">
<blockquote>
<p>The following article will introduce how to set up your first <em>flask server</em> after logging in your server, and some basic <strong>linux</strong>, <strong>git</strong> commands.</p>
</blockquote>
<span id="more"></span>
<p>[2021/08 更新] 这篇教程于 3 年前所写，大部分内容已没有参考意义，但值得一提的是，这记录了作者开发第一版博客时的心路历程 ^^</p>
<h2 id="Background">Background</h2>
<ul>
<li>A quite developed web project ( For Flask case, <code>flask run</code> listens <em>127.0.0.1:5000</em> by default. However, <code>flask run --host 0.0.0.0</code> listens <em>a.b.c.d:5000</em>  under the same wifi. Have fun with it first, then come and playing with VPS! )</li>
<li>This series is a supplyment for <em>Tradition Deploments</em> in <em>Chapter 17. Deployment</em> in <em><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L2ZsYXNrLXdlYi1kZXZlbG9wbWVudC85NzgxNDkxOTkxNzI1Lw==">Flask Web Development, 2nd Edition<i class="fa fa-external-link-alt"></i></span></em> written by <em>Miguel Grinberg</em>.</li>
</ul>
<h2 id="0-First-Impression-on-Ubuntu">0. First Impression on Ubuntu</h2>
<img src="/Flask-Traditional-Deployments-Zero-to-One-Flask-Server/ubuntu_login.png">
<p>Cong! You successfully login your virtual system.</p>
<p>But just after that, following warning is expected to pop up:</p>
<blockquote>
<p>WARNING! Your environment specifies an invalid locale.<br>
The unknown environment variables are:<br>
LC_CTYPE=UTF-8 LC_ALL=<br>
This can affect your user experience significantly, including the<br>
ability to manage packages. You may install the locales by running:<br>
sudo apt-get install language-pack-UTF-8<br>
​     or<br>
sudo locale-gen UTF-8<br>
To see all available language packs, run:<br>
apt-cache search “^language-pack-[a-z][a-z]$”<br>
To disable this message for all users, run:<br>
sudo touch /var/lib/cloud/instance/locale-check.skip</p>
</blockquote>
<p>Solution:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> LC_ALL=<span class="string">&quot;en_US.UTF-8&quot;</span></span><br><span class="line">$ <span class="built_in">export</span> LC_CTYPE=<span class="string">&quot;en_US.UTF-8&quot;</span></span><br><span class="line">$ sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure>
<p>Please do it, or you might encounter some weird issues below, like reporting</p>
<blockquote>
<p>The virtual environment was not created successfully because ensurepip is not<br>
available.  On Debian/Ubuntu systems, you need to install the python3-venv<br>
package using the following command.</p>
</blockquote>
<p>even though you might have already install <code>python3-venv</code>.</p>
<p>Now try some commands like:</p>
<ul>
<li>
<p><code>ls</code> : list directory contents</p>
</li>
<li>
<p><code>pwd</code> : return working directory name</p>
</li>
<li>
<p><code>man ls</code> : used to see <code>ls</code> manual pages</p>
</li>
<li>
<p><code>cd</code> : change current directory</p>
</li>
<li>
<p><code>mkdir</code> : make directories</p>
</li>
<li>
<p><code>rm</code> : remove directory entries (be very very careful here)</p>
<p>Tips: we can press <code>Tab</code> to automatically fillup the file name.</p>
</li>
</ul>
<h2 id="1-Pull-Your-Project-Down-to-Your-Server">1. Pull Your Project Down to Your Server</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~  <span class="comment"># To my main directory </span></span><br><span class="line">$ mkdir flask  <span class="comment"># to make a folder for my project </span></span><br><span class="line">$ <span class="built_in">cd</span> flask/ </span><br><span class="line">$ sudo apt-get install python3-venv </span><br></pre></td></tr></table></figure>
<blockquote>
<p>Issue: you might fail to install, reporting:</p>
<blockquote>
<p>E: Package ‘python3-venv’ has no installation candidate</p>
</blockquote>
<p>Solution:<br>
<code>$ sudo apt-get update </code><br>
Then install it again!</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install python3-pip </span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/v1siuol/v1siuol-site.git </span><br><span class="line">$ <span class="built_in">cd</span> v1siuol-site/ </span><br><span class="line">$ python3 -m venv venv </span><br><span class="line">$ pip install --upgrade pip</span><br><span class="line">$ <span class="built_in">source</span> venv/bin/activate</span><br><span class="line">(venv)$ pip install -r requirements.txt </span><br><span class="line">(venv)$ mv templates.env .env </span><br><span class="line">(venv)$ vim .env  <span class="comment"># Complete the config </span></span><br><span class="line">(venv)$ deactivate  <span class="comment"># Exit the venv</span></span><br></pre></td></tr></table></figure>
<p>Now the flask project is almost ready to go. But one more thing left behind: <strong>Setup the database</strong>.</p>
<h3 id="2-MySQL-on-Ubuntu">2. MySQL on Ubuntu</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install mysql-server</span><br><span class="line">$ mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p>You need to do some selections in the last step and MySQL should be installed successfully in your server. Check by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl status mysql.service</span><br></pre></td></tr></table></figure>
<blockquote>
<p>● mysql.service - MySQL Community Server<br>
Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: enabled)<br>
Active: active (running) since Tue 2018-08-14 07:01:00 UTC; 8min ago<br>
Main PID: 15973 (mysqld)<br>
CGroup: /system.slice/mysql.service<br>
​                  └─15973 /usr/sbin/mysqld<br>
Aug 14 07:00:59 ip-172-31-16-238 systemd[1]: Starting MySQL Community Server…<br>
Aug 14 07:01:00 ip-172-31-16-238 systemd[1]: Started MySQL Community Server.</p>
</blockquote>
<p>Next, we will create the database for my flask project.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -u root -p  <span class="comment"># Enter the password you set a few minutes ago</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>
Your MySQL connection id is 6<br>
Server version: 5.7.23-0ubuntu0.16.04.1 (Ubuntu)<br>
Copyright © 2000, 2018, Oracle and/or its affiliates. All rights reserved.<br>
Oracle is a registered trademark of Oracle Corporation and/or its<br>
affiliates. Other names may be trademarks of their respective<br>
owners.<br>
Type ‘help;’ or ‘\h’ for help. Type ‘\c’ to clear the current input statement.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(mysql) &gt; SHOW databases;</span><br><span class="line">(mysql) &gt; CREATE database IF NOT EXISTS v1siuol_site DEFAULT CHARSET utf8;</span><br><span class="line">(mysql) &gt; QUIT;</span><br></pre></td></tr></table></figure>
<h2 id="3-Do-something-Fun">3. Do something Fun</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(venv)$ flask run</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Traceback (most recent call last):<br>
File “/home/ubuntu/flask/v1siuol-site/venv/bin/flask”, line 11, in <module><br>
​    sys.exit(main())<br>
File “/home/ubuntu/flask/v1siuol-site/venv/lib/python3.5/site-packages/flask/cli.py”, line 894, in main<br>
​    cli.main(args=args, prog_name=name)<br>
File “/home/ubuntu/flask/v1siuol-site/venv/lib/python3.5/site-packages/flask/cli.py”, line 557, in main<br>
​    return super(FlaskGroup, self).main(*args, **kwargs)<br>
File “/home/ubuntu/flask/v1siuol-site/venv/lib/python3.5/site-packages/click/core.py”, line 676, in main<br>
​    _verify_python3_env()<br>
File “/home/ubuntu/flask/v1siuol-site/venv/lib/python3.5/site-packages/click/_unicodefun.py”, line 118, in _verify_python3_env<br>
​    ‘for mitigation steps.’ + extra)<br>
RuntimeError: Click will abort further execution because Python 3 was configured to use ASCII as encoding for the environment.  Consult <span class="exturl" data-url="aHR0cDovL2NsaWNrLnBvY29vLm9yZy9weXRob24zL2Zvcg==">http://click.pocoo.org/python3/for<i class="fa fa-external-link-alt"></i></span> mitigation steps.<br>
This system supports the C.UTF-8 locale which is recommended.<br>
You might be able to resolve your issue by exporting the<br>
following environment variables:<br>
export LC_ALL=C.UTF-8<br>
export LANG=C.UTF-8<br>
Click discovered that you exported a UTF-8 locale<br>
but the locale system could not pick up from it because<br>
it does not exist.  The exported locale is “en_US.UTF-8” but it<br>
is not supported</p>
</blockquote>
<p>Sign :( So we add <code>export LC_ALL=C.UTF-8</code> <code>export LANG=C.UTF-8</code> to <code>.env</code> .</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(venv)$ flask deploy</span><br><span class="line">(venv)$ flask run --host 0.0.0.0</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>Serving Flask app “<span class="exturl" data-url="aHR0cDovL3Yxc2l1b2wucHk=">v1siuol.py<i class="fa fa-external-link-alt"></i></span>”</li>
<li>Environment: production<br>
WARNING: Do not use the development server in a production environment.<br>
Use a production WSGI server instead.</li>
<li>Debug mode: off</li>
<li>Running on <span class="exturl" data-url="aHR0cDovLzAuMC4wLjA6NTAwMC8=">http://0.0.0.0:5000/<i class="fa fa-external-link-alt"></i></span> (Press CTRL+C to quit)</li>
</ul>
</blockquote>
<p>NOW turn up your brower, type your <code>&lt;public IP&gt;:5000</code> as url.</p>
<blockquote>
<p>&lt;public IP&gt; can be found in your console:<br>
<img src="/Flask-Traditional-Deployments-Zero-to-One-Flask-Server/aws_public_ip.png"></p>
</blockquote>
<p>WOW!!</p>
<img src="/Flask-Traditional-Deployments-Zero-to-One-Flask-Server/flask_own_server.png">
<p>Thank you.</p>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Flask</tag>
      </tags>
  </entry>
  <entry>
    <title>Flask Traditional Deployments: Zero to One &amp;lt;Setup a VPS&amp;gt;</title>
    <url>/Flask-Traditional-Deployments-Zero-to-One-Setup-a-VPS/</url>
    <content><![CDATA[<img src="/Flask-Traditional-Deployments-Zero-to-One-Setup-a-VPS/Flask_Traditional_Deployments_Zero_to_One_Setup_a_VPS_avatar.png">
<blockquote>
<p>The following article will introduce how to set up a <strong>virtual private server</strong>, and some basic <strong>Linux</strong> commands.</p>
</blockquote>
<span id="more"></span>
<h2 id="Background">Background</h2>
<ul>
<li>A quite developed web project ( For Flask case, <code>flask run</code> listens <em>127.0.0.1:5000</em> by default, or <code>flask run --host 0.0.0.0</code> to listen all public IPs, like <em>a.b.c.d:5000</em>. Have fun with this first, then come and play with VPS! )</li>
<li>This series is a supplement for <em>Tradition Deployments</em> in <em>Chapter 17. Deployment</em> in <em><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L2ZsYXNrLXdlYi1kZXZlbG9wbWVudC85NzgxNDkxOTkxNzI1Lw==">Flask Web Development, 2nd Edition<i class="fa fa-external-link-alt"></i></span></em> written by <em>Miguel Grinberg</em>.</li>
<li><code>$ something</code> refers to commands in bash</li>
</ul>
<h2 id="0-How-to-Select-a-Virtual-Private-Server">0. How to Select a Virtual Private Server</h2>
<table>
<thead>
<tr>
<th>地区</th>
<th>服务</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>国内</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS8=">腾讯云<i class="fa fa-external-link-alt"></i></span></td>
<td>需备案</td>
</tr>
<tr>
<td>海外</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS8=">AWS<i class="fa fa-external-link-alt"></i></span></td>
<td>国内的 AWS 由北京的光环新网运营</td>
</tr>
</tbody>
</table>
<p>以上是些主流的云服务器啦，贵贵的。</p>
<p>I select AWS here since AWS provides a free tier for <strong>one</strong> year. For details, refer to <span class="exturl" data-url="aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS9mcmVlLw==">https://aws.amazon.com/free/<i class="fa fa-external-link-alt"></i></span>.</p>
<p>AWS Free Tier includes 750 hours of <span class="exturl" data-url="aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS9lYzIv">Amazon Elastic Compute Cloud (EC2)<i class="fa fa-external-link-alt"></i></span> <strong>Linux</strong> t2.micro instance usage (1 GiB of memory and 32-bit and 64-bit platform support). Saying we can run 1 instance continuously for one month, or 2 instances at the same time continuously for half a month.</p>
<p>It also includes 30 GB of <a href="https://aws.amazon.com/ebs/">Amazon Elastic Block <strong>Storage</strong> (EBS)</a> in any combination of General Purpose (SSD) or Magnetic, plus 2 million I/Os (with EBS Magnetic) and 1 GB of snapshot storage.</p>
<h2 id="1-How-to-Create-the-Amazon-EC2">1. How to Create the Amazon EC2</h2>
<p>Official documents: <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0VDMi9sYXRlc3QvVXNlckd1aWRlL2dldC1zZXQtdXAtZm9yLWFtYXpvbi1lYzIuaHRtbA==">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Basic steps:</p>
<ol>
<li>Sign Up for AWS</li>
<li>Create an IAM User</li>
<li>Create a Key Pair</li>
<li>Create a Virtual Private Cloud (VPC)</li>
<li>Create a Security Group</li>
</ol>
<p>My VPC is like this:</p>
<ol>
<li>
<p>AMI: Ubuntu Server 16.04 LTS (HVM), SSD Volume Type - ami-5e8bb23b</p>
<p>Ubuntu Server 16.04 LTS (HVM), EBS General Purpose (SSD) Volume Type.</p>
</li>
<li>
<p>Instance type: t2.micro (Variable ECUs, 1 vCPUs, 2.5 GHz, Intel Xeon Family, 1 GiB memory, EBS only)</p>
</li>
</ol>
<h2 id="2-How-to-Connect-to-my-VPC">2. How to Connect to my VPC</h2>
<p>Official documents: <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0VDMi9sYXRlc3QvVXNlckd1aWRlL0FjY2Vzc2luZ0luc3RhbmNlc0xpbnV4Lmh0bWw=">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Two commands using in my Mac terminal:</p>
<ol>
<li>
<p><code>$ chmod 400 /path/my-key-pair.pem</code></p>
<p>This is used to set the permissions of your private key file as read-only.</p>
<p>The link to learn more on <code>chmod</code> : <span class="exturl" data-url="aHR0cHM6Ly9jaG1vZGNvbW1hbmQuY29tL2NobW9kLTQwMC8=">https://chmodcommand.com/chmod-400/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li>
<p><code>$ ssh -i /path/my-key-pair.pem user_name@public_dns_name</code></p>
<p>Default <code>user_name</code> is like:</p>
<ul>
<li>For Amazon Linux 2 or the Amazon Linux AMI, the user name is <code>ec2-user</code>.</li>
<li>For a Centos AMI, the user name is <code>centos</code>.</li>
<li>For a Debian AMI, the user name is <code>admin</code> or <code>root</code>.</li>
<li>For a Fedora AMI, the user name is <code>ec2-user</code> or <code>fedora</code>.</li>
<li>For a RHEL AMI, the user name is <code>ec2-user</code> or <code>root</code>.</li>
<li>For a SUSE AMI, the user name is <code>ec2-user</code> or <code>root</code>.</li>
<li>For an Ubuntu AMI, the user name is <code>ubuntu</code>.</li>
<li>Otherwise, if <code>ec2-user</code> and <code>root</code> don’t work, check with the AMI provider.</li>
</ul>
<p><code>public_dns_name</code> is like:<code>ec2-198-51-100-1.compute-1.amazonaws.com</code></p>
</li>
<li>
<p>The updated version of my second command: <code>$ ssh -o TCPKeepAlive=yes -o ServerAliveInterval=60 -i /path/my-key-pair.pem user_name@public_dns_name</code></p>
<p>In my practice, I usually encounter if I do nothing in the terminal for like 5 minutes.</p>
<blockquote>
<p>packet_write_wait: Connection to &lt;ip&gt; port 22: Broken pipe</p>
</blockquote>
<p>So I update the connection by sending the “HeartBeat” to the server to hold my connection.</p>
</li>
</ol>
<h2 id="3-How-to-Close-my-VPC-Connection">3. How to Close my VPC Connection</h2>
<p><code>$ logout</code> : then you will see <code>Connection to &lt;public_dns_name&gt; closed. </code> .</p>
<h2 id="4-Optional-How-to-transfer-files-between-my-PC-and-EC2">4. (Optional) How to transfer files between my PC and EC2</h2>
<ol>
<li>
<p>Send files from PC to EC2: PC --&gt; EC2</p>
<p><code>$ scp -i /path/my-key-pair.pem /path/SampleFile.txt user_name@public_dns_name:/path</code></p>
<p><code>/path</code> : my suggestion is to use <code>~</code> or <code>/tmp</code> . If sending to other paths in your EC2, it might say <code>permission denied</code> .</p>
<p>So after scp the file to <code>/tmp</code> , <code>ssh</code> to your server and use command <code>mv /tmp/SamepleFile.txt /path/you_want</code> .</p>
</li>
<li>
<p>Send files from EC2 to PC: EC2 --&gt; PC</p>
<p><code>$ scp -i /path/my-key-pair.pem user_name@public_dns_name:/path_in_EC2/SampleFile.txt ~/path_on_PC</code></p>
</li>
</ol>
<p>Thank you.</p>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Flask</tag>
      </tags>
  </entry>
  <entry>
    <title>《摆 烂》</title>
    <url>/%E3%80%8A%E6%91%86-%E7%83%82%E3%80%8B/</url>
    <content><![CDATA[<p>「正经人谁写<s>日记</s>博客啊」</p>
<img src="/《摆-烂》/wind_knight-i7bt5FNYcNI-unsplash.jpg" width="50%" height="50%">
<p>早在四五年前，我便创了一个微信公众号。可惜，直到目前，还只是用来预览测试过。也起草过些许零零散散的短文，无奈羞涩，一直被我埋藏在深深的角落里。</p>
<p>也是有一段时间没写过文章了。打小的时候开始，我的语文便不太好，腹中的知识也早已一一归还，文笔不好，还请见谅。开篇即摆烂，但其实内心还是希望能好好坚持下去，多读读，多想想，多写写，会好起来的吧。</p>
<p>话说回来，如今已是盛夏，只可惜暑假已不再属于我了。闲暇之际，还是会很想念那年的夏天。无忧，无虑，很是美好。</p>
<span id="more"></span>
<img src="/《摆-烂》/league_of_legends_Moo_Cow_Alistar_giphy_min.gif" width="50%" height="50%">
<p>说一说 v1siuol 这个名字吧，这是我众多马甲中的一个。姑且称作小 v，憧憬着会有那么一天长大成 v 神。其实这名字反过来看就比较好理解了：louis1v。louis 即我的英文名，1v 则是我姓的中文拼音。</p>
<p>没有什么出众的奖项，也没有什么出彩的项目，说到底只不过是个平平无奇小废物。他们都说「未来可期」，是啊，近期的目标是在平台上找到自己感兴趣的项目，给开源社区贡献一份微小的力量吧。</p>
<img src="/《摆-烂》/zino-scheers-CAf3ld_LLz8-unsplash.jpg" width="50%" height="50%">
<p>再谈谈博客吧。转眼间这已经是我第三版的博客了。</p>
<p>第一版是 Python Flask 加 Jinja2 模板直接使用服务器渲染的，那时候是仿照动物书《Flask Web Development》中的例子做成的。当时上学时主要用 Python，正好 Python 中比较有名的网络框架有 Django，Flask 等。考虑到 Flask 的轻量以及可扩展性吧，我也刚好选择了这本书，并从中受益良多。这本书循序渐进，层层深入，又不忘工程中的可测试性，安全性。该书给予了当时的我很多思考与启发。再到后来部署时，我采用了 uWSGI 及 NGINX 的方案。到此为止，第一版博客诞生了。</p>
<p>不知是哪一天，我在网上冲浪的时候发现了一个很好看的网站，改版的种子就埋在了我的心里。那时流行 Angular，React，Vue 三大前端框架，我从中选择了 React 做前端，并延续 Flask 做后端 API。经过了一系列的更新迭代，第二版博客于 2019 年暑假正式上线。</p>
<p>可惜的是，Flask 伴随着各类 package 的加入，它从开箱即用，到一定程度上的臃肿，这套方案也渐渐的走下了历史的舞台。如今第三版，使用的 GitHub Pages + Hexo 配合 NexT 主题的方案。不出意外的话，这也是将来很长一段时间内使用的一个方案了，因为它基本达到了我对博客的各式需求。再加上魔改的存在，使得你能更加自由的注入灵魂。以后这里主要用来做技术分享以及日常摆烂的杂记啦，敬请期待。</p>
<p>今天也是中国共产党迎来百年华诞之际。愿祖国繁荣昌盛，国泰民安！</p>
<p>二零二一年七月一日，v1siuol 写于 Norwalk，CT</p>
]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>中文</tag>
      </tags>
  </entry>
</search>
